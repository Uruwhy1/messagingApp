generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  password    String
  name        String
  description String?
  picture     String?
  status      Boolean @default(false)

  friends  User[] @relation("UserFriends")
  friendOf User[] @relation("UserFriends")

  messages      Message[]
  conversations ConversationUser[]

  sentRequests     FriendRequest[] @relation("SentRequests")
  receivedRequests FriendRequest[] @relation("ReceivedRequests")
  Conversation     Conversation[]
}

model Message {
  id      Int      @id @default(autoincrement())
  date    DateTime @default(now())
  content String

  author         User         @relation(fields: [authorId], references: [id])
  authorId       Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
}

model Conversation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @default("")

  admin   User @relation(fields: [adminId], references: [id])
  adminId Int

  messages Message[]
  users    ConversationUser[]
}

model ConversationUser {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int

  @@unique([userId, conversationId])
}

model FriendRequest {
  id        Int      @id @default(autoincrement())
  status    String   @default("pending")
  createdAt DateTime @default(now())

  sender     User @relation("SentRequests", fields: [senderId], references: [id])
  senderId   Int
  receiver   User @relation("ReceivedRequests", fields: [receiverId], references: [id])
  receiverId Int
}
